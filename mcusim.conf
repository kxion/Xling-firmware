#
# This file is part of MCUSim, an XSPICE library with microcontrollers.
#
# Copyright (C) 2017-2019 MCUSim Developers, see AUTHORS.txt for contributors.
#
# MCUSim is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# MCUSim is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
#
# This is an MCUSim configuration file. Please, adjust it to modify
# the default behavior of the simulator.

# Model of the simulated microcontroller.
#
# ATmega8: mcu m8
# ATmega328: mcu m328
# ATmega328p: mcu m328p
mcu m328p

# Microcontroller clock frequency (in Hz).
mcu_freq 12000000

# Microcontroller lock bits and fuse bytes.
#
#mcu_lockbits 0x00
#mcu_efuse 0xFF
mcu_hfuse 0xD9
mcu_lfuse 0xEF

# File to load a content of flash memory from.
firmware_file xling.hex

# Reset flash memory flag.
#
# Flash memory of the microcontrollers can be preserved between the different
# simulations by default. It means that the flash memory can be saved in a
# separate utility file before the end of a simulation and loaded back during
# the next one.
#
# Default value (yes) means that the firmware file has a priority over the
# utility file.
reset_flash yes

# Lua models which will be loaded and used during the simulation.
#lua_model /usr/local/share/mcusim/models/avr/brief-usage.lua
#lua_model /usr/local/share/mcusim/models/avr/stop-in-5s.lua

# Firmware test flag. Simulation can be started in a firmware test mode in
# which simulator will not be waiting for any external event (like a command
# from debugger) to continue with the simulation.
firmware_test no

# Name of the VCD (Value Change Dump) file to be generated during the
# simulation process to collect data and trace signals after the simulation.
vcd_file trace.vcd

# Microcontroller registers to be dumped to the VCD file.
#
#	PORTC4 - bit-bang SDA
#	PORTC5 - bit-bang SCL
#	TIFR21 - OCF2A, Output Compare Flag 2 A
#
dump_reg PORTC4
dump_reg PORTC5

# Port of the RSP target. AVR GDB can be used to connect to the port and
# debug firmware of the microcontroller.
rsp_port 12750

# Flag to trap AVR GDB when interrupt occured.
trap_at_isr no
